// This script is used to find negative peaks in the leakage currents of the transfer curves. It loops over all the workbooks in the folder and 
[Main]
	del -al *;// Delete all the local and session variables

	newbook name:="Peaks" option:=lsname;
	wks.colwidth = 8;// set all col width to 8
	int t0 = 0; // time constant to be added to time variable, just in case my experiment is a continuation of a previous one that needs to be taken into account in the elapsed time
	int j = 0;

	Col(A)[L]$="Time";
	Col(A)[U]$="Minutes";
	Col(B)[L]$="Peak 1";
	Col(B)[U]$="V";
	Col(C)[L]$="Peak 2";
	Col(C)[U]$="V";

doc -ef LB { // loop over all workbooks in folder
	wks.colwidth = 8;// set all col width to 8
	string sheetname$=page.longname$; //get the name of worksheet
	string a$=sheetname.GetToken(15,"_")$; // get the string "T" or "O", which shows if the curve is a transfer or output curve
	string time$=sheetname.GetToken(13,"_")$; // get the string No8, which shows the time in minutes
	int t=%(time$); // convert string to integer
	t = t0 + t; // add time constant to time
	i=a.Find('O');
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	string bkn$ = %H;
	double m = mean(col(F)); // Find the mean of col(F)
	
	j=j+1;
	
	if(exist(%H,2)==0) //not a workbook, must be a matrix
			continue;
		else
			if (i == 1) continue;	// if this is an output curve then break		
				else
					col(G)[L]$ = "Ig (Vd=-1.0V) Baseline"; // Long name
					col(G)[U]$ = A; // Units				
					col(G)[O]$ = "col(F)-m;"; // Comments
					pkfind iy:=[%H]1!G method:=max dir:=n npts:=2 filter:=num value:=2 ocenter:=col(8) ocenter_x:=col(9) ocenter_y:=col(10);
					//plotxy iy:=col(6) plot:=200; // Plot the leakage current curve
					//plotxy iy:=[bkn$]1!(9,10) plot:=201  legend:=1 color:=2 ogl:=1!; //Plot peak centers as red scatters
					
					// Copy the peaks to a separate file
					range r=[%H]!Col(I); // origin range for peak values
					range dest1=[Peaks]1!wcol(1); // destination range for time values
					range dest2=[Peaks]1!wcol(2); // destination range for Peak 1 values
					range dest3=[Peaks]1!wcol(3); // destination range for Peak 2 values
					dest1[j]=t;
					dest2[j]=r[1]; // Copy Peak 1
					dest3[j]=r[2]; // Copy Peak 2
					
// smart labels????
}
}