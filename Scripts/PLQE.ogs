// This script is used to perform all the PLQE calculations. It loops over all the workbooks in the folder and creates four new columns, one pair for the abs(Id) and one pair for abs(Ig).
// Author: Dimitrios Simatos
// Version: 0.8
// Current status: Does not work.
// Changes: Replaced the misleading "previous workbook" variable.


[Main]
//uncomment following line to define functions using outside of this scope
//@global=1;

//-----------------------------------------------------------------------------------------------------------------------------------------------------------

	del -al *;// Delete all the local and session variables
	
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

	//int i=0;
	//int j=0;
	//int k=0;
	int l=1; // Row number to paste the results to the Log file   <------------------------------------------------------

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
	//// Cleanup of data files
	//doc -ef LB { // loop over all workbooks in folder
		//
		//range r1=[%H]1!Col(A)[1027:1052]; // origin range for metadata <------------------------------------------------------
		//range r2=[%H]2!Col(A); // destination range for metadata <------------------------------------------------------
		//r2=r1;
		//wks.nrows=1024; // trim number of rows <------------------------------------------------------
		//
		//// Rename the second sheet
		//page.active = 2;
		//wks.name$ = "Metadata";
		//
		//page.active = 1; // Switch to the first worksheet
	//}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

	string sheetname$=page.longname$; // Get the name of worksheet
		
	string batch$ = sheetname.GetToken(1,"_")$; // Get the string that shows the batch
	string architecture$ = sheetname.GetToken(2,"_")$; // Get the string that shows the architecture
	string material$ = sheetname.GetToken(3,"_")$; // Get the string that shows the material

	string concentration$ = sheetname.GetToken(4,"_")$; // Get the string that shows the concentration
	string concnumber$ = concentration.GetToken(1,"-")$; // Get the string that shows the concentration number
	string concunits$ = concentration.GetToken(2,"-")$; // Get the string that shows the concentration units

	string solvent$ = sheetname.GetToken(5,"_")$; // Get the string that shows the solvent content
	
	string additive$ = sheetname.GetToken(6,"_")$; // Get the string that shows the additive
	//string addthickness$ = additive.GetToken(2,"-")$; // Get the string that shows the additive thickness
	//string addthicknessunits$ = additive.GetToken(3,"-")$; // Get the string that shows the additive thickness units
	
	string gas$ = sheetname.GetToken(7,"_")$; // Get the string that shows the gas inside the integrating sphere
	string detector$ = sheetname.GetToken(8,"_")$; // Get the string that shows the detector
	string measNo$ = sheetname.GetToken(10,"_")$; // get the string, which shows the number of the measurement
	string sample$ = sheetname.GetToken(12,"_")$; // get the string, which shows if the sample is inside the integrating sphere
	string hole$ = sheetname.GetToken(14,"_")$; // get the string, which shows through which hole the laser enters the integrating sphere
	string filter$ = sheetname.GetToken(16,"_")$; // get the string, which shows the type of filter
	string et$ = sheetname.GetToken(18,"_")$; // get the string, which shows the exposure time
	string acc$ = sheetname.GetToken(20,"_")$; // get the string, which shows the number of accumulations
	string slit$ = sheetname.GetToken(22,"_")$; // get the string, which shows the slit size

	string activeworkbook$=%H; // Get the name of the (active) workbook to be processed


	newbook name:="%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_%(gas$)_%(detector$)_meas_%(measNo$)_Analysis" option:=lsname sheet:=2; //Add new workbook with two names
	page.active = 1; // Switch to the first worksheet. I do not want the metadata worksheets to be parsed.
	wks.name$ = "Areas";

	wks.ncols=15; // set total column number to 15
	
	col(A)[L]$ = "Wavelength"; // Long name
	col(A)[U]$ = nm; // Units
	
	col(B)[L]$ = "Intensity"; // Long name
	col(B)[U]$ = AU; // Units
	col(B)[C]$ = "Without sample"; // Comments
	
	col(C)[L]$ = "Intensity"; // Long name
	col(C)[U]$ = AU; // Units
	col(C)[C]$ = "Laser indirectly"; // Comments
	
	col(D)[L]$ = "Intensity"; // Long name
	col(D)[U]$ = AU; // Units
	col(D)[C]$ = "Laser directly"; // Comments
	
	
	col(E)[L]$ = "Calibration Wavelength"; // Long name
	col(E)[U]$ = nm; // Units
	
	col(F)[L]$ = "Calibration Intensity"; // Long name
	col(F)[U]$ = AU; // Units
	
	col(G)[L]$ = "Linearly Interpolated Calibration Intensity"; // Long name
	col(G)[U]$ = AU; // Units
	
	
	
	col(H)[L]$ = "Intensity"; // Long name
	col(H)[U]$ = AU; // Units
	col(H)[C]$ = "Without sample (calibrated)"; // Comments
	
	col(I)[L]$ = "Intensity"; // Long name
	col(I)[U]$ = AU; // Units
	col(I)[C]$ = "Laser indirectly (calibrated)"; // Comments
	
	col(J)[L]$ = "Intensity"; // Long name
	col(J)[U]$ = AU; // Units
	col(J)[C]$ = "Laser directly (calibrated)"; // Comments

	win -a %(activeworkbook$);  // activate the previous window (workbook)

	
doc -ef LB { // loop over all workbooks in folder
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	wks.colwidth = 11;// set all col width to 11
	page.active = 1; // Switch to the first worksheet. I do not want the metadata worksheets to be parsed.


	string sheetname$=page.longname$; //get the name of worksheet
	
	// Copy wavelength column to col(A) of Sheet 1
	range r=[%H]!Col(A); // origin range for wavelength values
	range dest1=[Analysis]1!wcol(1); // destination range for wavelength values
	dest1=r;

	win -a "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_%(gas$)_%(detector$)_meas_%(measNo$)_sample_%(sample$)_laser_%(hole$)_filter_%(filter$)_et_%(et$)_acc_%(acc$)_slit_%(slit$)_clamped";
	range r=[%H]!Col(B); // origin range for intensity values
	range dest1=[Analysis]1!wcol(2); // destination range for intensity (not) values
	dest1=r;
	
	win -a "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_%(gas$)_%(detector$)_meas_%(measNo$)_sample_in_laser_left_filter_none_et_%(et$)_acc_%(acc$)_slit_%(slit$)_clamped";
	range r=[%H]!Col(B); // origin range for intensity values
	range dest1=[Analysis]1!wcol(3); // destination range for intensity (off) values
	dest1=r;

	win -a "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_%(gas$)_%(detector$)_meas_%(measNo$)_sample_in_laser_right_filter_none_et_%(et$)_acc_%(acc$)_slit_%(slit$)_clamped";
	range r=[%H]!Col(B); // origin range for intensity values
	range dest1=[Analysis]1!wcol(4); // destination range for intensity (on) values
	dest1=r;
	

	//i = sheetname.Find("clamped"); // Should be changed according to filename  <------------------------------------------------------
	//j = sheetname.Find("sample_in_laser_left_filter_none"); // Should be changed according to filename  <------------------------------------------------------
	//k = sheetname.Find("sample_in_laser_right_filter_none"); // Should be changed according to filename  <------------------------------------------------------
//
	
	//if (i!=0){
		//// Copy intensity (not) column to col(B) of Sheet 1
		//range r=[%H]!Col(B); // origin range for intensity values
		//range dest1=[Analysis]1!wcol(2); // destination range for intensity (not) values
		//dest1=r;
		//i=0;
	//}
//
	//if (j!=0){
		//// Copy intensity (off) column to col(C) of Sheet 1
		//range r=[%H]!Col(B); // origin range for intensity values
		//range dest1=[Analysis]1!wcol(3); // destination range for intensity (off) values
		//dest1=r;
		//j=0;
	//}
	//
	//if (k!=0){
		//// Copy intensity (off) column to col(C) of Sheet 1
		//range r=[%H]!Col(B); // origin range for intensity values
		//range dest1=[Analysis]1!wcol(4); // destination range for intensity (on) values
		//dest1=r;
		//k=0;
	//}

}	

	// Copy the calibration wavelength of the chosen detector to Column E
	range r=["%(detector$)"]!Col(A); // origin range for wavelength values
	range dest1=[Analysis]1!wcol(5); // destination range for calibration wavelength values
	dest1=r;

	// Copy the calibration intensity of the chosen detector to Column F
	range r=["%(detector$)"]!Col(B); // origin range for intensity values
	range dest1=[Analysis]1!wcol(6); // destination range for calibration intensity values
	dest1=r;

	// Linear interpolation of the calibration intensity
	range rr=(5,6); // Define XYrange
	range rNewX = col(1);
	//wcol(9) = rr(rNewX); // Using this command will NOT enable the recalculate mode.
	col(G)[O]$ = "rr(rNewX)"; // Interpolate for new X axis

	col(H)[O]$ = "abs(col(B)/col(G))";
	col(I)[O]$ = "abs(col(C)/col(G))";
	col(J)[O]$ = "abs(col(D)/col(G))";
	
	// Plot spectra
	win -t p Intensity_vs_wavelength.otpu Intensity_vs_wavelength;  // create a graph window using template
	range r1 = [Analysis]1!Col(2);  // data range of column 2
	win -a Intensity_vs_wavelength;  // activate the graph window
	//page.active = nActive;  // activate the layer for plot
	layer.include(r1);  // plot in the active layer

	range r2 = [Analysis]1!Col(3);  // data range of column 3
	win -a Intensity_vs_wavelength;  // activate the graph window
	//page.active = nActive;  // activate the layer for plot
	layer.include(r2);  // plot in the active layer

	range r3 = [Analysis]1!Col(4);  // data range of column 4
	win -a Intensity_vs_wavelength;  // activate the graph window
	//page.active = nActive;  // activate the layer for plot
	layer.include(r3);  // plot in the active layer

	layer -a;  // rescale the layer
	layer -g; // Group the datasets in the layer to auto-color increment


	win -r %H %(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_%(gas$)_%(detector$)_meas_%(measNo$)_I_vs_lambda; //this renames the active window (short name)
	page.longname$="%(architecture$)_%(material$)_%(additive$)_%(gas$)_%(detector$)_%(measNo$)_Intensity_vs_wavelength"; //this renames the active window (long name)

	win -t p Intensity_calibrated.otpu Intensity_calibrated;  // create a graph window using template
	range r4 = [Analysis]1!Col(8);  // data range of column 8
	win -a Intensity_calibrated;  // activate the graph window
	//page.active = nActive;  // activate the layer for plot
	layer.include(r4);  // plot in the active layer

	range r5 = [Analysis]1!Col(9);  // data range of column 9
	win -a Intensity_calibrated;  // activate the graph window
	//page.active = nActive;  // activate the layer for plot
	layer.include(r5);  // plot in the active layer

	range r6 = [Analysis]1!Col(10);  // data range of column 10
	win -a Intensity_calibrated;  // activate the graph window
	//page.active = nActive;  // activate the layer for plot
	layer.include(r6);  // plot in the active layer

	layer -a;  // rescale the layer
	layer -g; // Group the datasets in the layer to auto-color increment


	// Rename graph according to material name
	// Note:  Old LabTalk commands can only accept string variables if they are substituted!
	// See: https://my.originlab.com/forum/topic.asp?TOPIC_ID=18230

	win -r %H %(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_%(gas$)_%(detector$)_meas_%(measNo$)_I_vs_lambda_calibrated; //this renames the active window (short name)
	page.longname$="%(architecture$)_%(material$)_%(additive$)_%(gas$)_%(detector$)_%(measNo$)_Intensity_vs_wavelength_calibrated"; //this renames the active window (long name)
	layer -g; // Group the datasets in the layer to auto-color increment

	// Integrate the areas below the intensity curves

	win -a Analysis; 	// Activate the workbook. Otherwise the integration command will not work.

	//sec -p 10; // Pause for 10 seconds.

	integ1 iy:=[Analysis]1!col(8)[376:412] type:=abs area:=area1 oy:=col(11);// origin range for integration values (Should be changed according to laser spectrum)  <------------------------------------------------------

		col(K)[L]$ = "Integrated Intensity"; // Long name
		col(K)[U]$ = AU; // Units
		col(K)[C]$ = "Without sample (calibrated)"; // Comments

	integ1 iy:=[Analysis]1!col(9)[376:412] type:=abs area:=area2 oy:=col(12);// origin range for integration values (Should be changed according to laser spectrum)  <------------------------------------------------------

		col(L)[L]$ = "Integrated Intensity"; // Long name
		col(L)[U]$ = AU; // Units
		col(L)[C]$ = "Laser indirectly (calibrated)"; // Comments

	integ1 iy:=[Analysis]1!col(10)[376:412] type:=abs area:=area3 oy:=col(13);// origin range for integration values (Should be changed according to laser spectrum)  <------------------------------------------------------

		col(M)[L]$ = "Integrated Intensity"; // Long name
		col(M)[U]$ = AU; // Units
		col(M)[C]$ = "Laser directly (calibrated)"; // Comments

	integ1 iy:=[Analysis]1!col(9)[491:716] type:=abs area:=area4 oy:=col(14);// origin range for integration values (Should be changed according to laser spectrum)  <------------------------------------------------------

		col(N)[L]$ = "Integrated Intensity"; // Long name
		col(N)[U]$ = AU; // Units
		col(N)[C]$ = "P off"; // Comments

	integ1 iy:=[Analysis]1!col(10)[491:716] type:=abs area:=area5 oy:=col(15);// origin range for integration values (Should be changed according to laser spectrum)  <------------------------------------------------------

		col(O)[L]$ = "Integrated Intensity"; // Long name
		col(O)[U]$ = AU; // Units
		col(O)[C]$ = "P on"; // Comments


	page.active = 2; // Switch to the second worksheet.
	wks.name$ = "Log";

	col(A)[L]$ = "L not"; // Long name
	col(A)[U]$ = AU; // Units
	col(A)[C]$ = "Without sample (calibrated)"; // Comments

	range dest1=[Analysis]2!wcol(1); // destination range for L not values
	dest1[l]=area1;

	
	col(B)[L]$ = "L off"; // Long name
	col(B)[U]$ = AU; // Units
	col(B)[C]$ = "Laser indirectly (calibrated)"; // Comments

	range dest1=[Analysis]2!wcol(2); // destination range for L not values
	dest1[l]=area2;

	
	col(C)[L]$ = "L on"; // Long name
	col(C)[U]$ = AU; // Units
	col(C)[C]$ = "Laser directly (calibrated)"; // Comments

	range dest1=[Analysis]2!wcol(3); // destination range for L not values
	dest1[l]=area3;


	col(D)[L]$ = "P off"; // Long name
	col(D)[U]$ = AU; // Units
	col(D)[C]$ = "Laser indirectly (calibrated)"; // Comments

	range dest1=[Analysis]2!wcol(4); // destination range for L not values
	dest1[l]=area4;


	col(E)[L]$ = "P on"; // Long name
	col(E)[U]$ = AU; // Units
	col(E)[C]$ = "Laser directly (calibrated)"; // Comments

	range dest1=[Analysis]2!wcol(5); // destination range for L not values
	dest1[l]=area5;

	col(F)[L]$ = "Absorption"; // Long name
	col(F)[U]$ = AU; // Units
	col(F)[O]$ = "1-(col(C)/col(B))"; // Comments

	col(H)[L]$ = "PLQE"; // Long name
	col(H)[U]$ = AU; // Units
	col(H)[O]$ = "(col(E)-(1-col(F))*col(D))/(col(A)*col(F))"; // Comments
	
	// Rename the Analysis workbook and the graphs
	win -r Analysis "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_%(gas$)_%(detector$)_meas_%(measNo$)_Analysis"; //this renames the active window (short name)
}
