// This script is used in transfer curves taken with the low noise rig in two drain voltages. It loops over all the workbooks in the folder and creates four new columns, one pair for the abs(Id) and one pair for abs(Ig).
// Author: Dimitrios Simatos
// Version: 0.3
// Current status: Works well.

[Main]
//uncomment following line to define functions using outside of this scope
//@global=1;
	del -al *;// Delete all the local and session variables
	
doc -ef LB { // loop over all workbooks in folder
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	page.active = 1; // Switch to the first worksheet.
	wks.colwidth = 8;// set all col width to 8
	
	string sheetname$=page.longname$; //Get the name of worksheet
	%K = sheetname.GetToken(9,"_")$; // Get the string that shows the step number in the cycling process
	%M = sheetname.GetToken(10,"_")$; // Get the string that shows the conditions (air/type of liquid)
	%N = sheetname.GetToken(12,"_")$; // get the string, which shows the number of days
	%A = sheetname.GetToken(13,"_")$; // Get the string No 13, which shows the time in minutes
	
	string a=sheetname.GetToken(15,"_")$; // Get the string "T" or "O", which shows if the curve is a transfer or output curve
	i=a.Find('O'); // output or transfer curve check
	
	// Time constant addition
	//int t0 = 0; // time constant to be added to time variable, just in case my experiment is a continuation of a previous one that needs to be taken into account in the elapsed time
	//int t = %A; // Convert string to integer
	//t = t0 + t; // add time constant to time
	//%A=$(t); // Convert integer to string

	if(exist(%H,2)==0) continue; // not a workbook, must be a matrix
		else 
			if (i == 1) continue;	// if this is an output curve then break		
				else wks.ncols=6; // set total column number to 6
					// Write long name, units, comments, and parameter1 of column B
					col(A)[L]$ = "Vg"; // Long name
					col(A)[U]$ = V; // Units
					col(E)[L]$ = "Id (Vd=-1.0V)"; // Long name
					col(E)[U]$ = A; // Units
					col(E)[O]$ = "abs(C)";
					col(F)[L]$ = "Ig (Vd=-1.0V)"; // Long name
					col(F)[U]$ = A; // Units
					col(F)[O]$ = "abs(D)";
						switch (%M) // Case study
						{
							case "ultrapure": // If the string is "air", write "air in the comment field
								%M = "Ultrapure water"; // Comment field (graph legend)
								break;
							
							case "town": // If the number is 1, use single form
								%M = "Town water"; // Comment field (graph legend)
								break;
							
							default: // For all other numbers, use plural form
								%M = "Air"; // Comment field (graph legend)
								break;
						}
					
					switch (%N) // Case study
						{
							case "initial": // If the string is "air", write "air in the comment field
								%N = "initial"; // Comment field (graph legend)
								break;
							
							case "1": // If the number is 1, use single form
								%N = "1 day"; // Comment field (graph legend)
								break;
							
							default: // For all other numbers, use plural form
								%N = "%N days"; // Comment field (graph legend)
								break;
						}
					switch (%A) // Case study
						{
							case "air": // If the string is "air", write "air in the comment field
								col(E)[C]$ = "%M"; // Comment field (graph legend)
								break;
							
							case "1": // If the number is 1, use single form
								col(E)[C]$ = "%M, %N, %A minute"; // Comment field (graph legend)
								break;
							
							default: // For all other numbers, use plural form
								col(E)[C]$ = "%M, %N, %A minutes"; // Comment field (graph legend)
								break;
						}
	col(F)[C]$ = col(E)[C]$ + ", Leakage"; // Comment field (graph legend)
}