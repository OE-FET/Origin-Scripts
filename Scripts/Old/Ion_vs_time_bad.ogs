// This script aims to loop all the workbooks, select a specific value of each workbook (on current) and then copy that value in the 2nd column of a different workbook.
// The aim is to plot Ion a function of time. It is incomplete.

[Main]

// Set up a summary workbook, name will be stored in bkname$ by default
newbook name:="Book1" option:=lsname;
page.longname$ = "TGBC_IDTBT_10pTCNQ_83pDCB_buffer_Ion_vs_time_Vg=-1.0V_Vd=-1.0V";
wks.colwidth = 8;// set all col width to 8

Col(A)[L]$="Time";
Col(A)[U]$="Minutes";
Col(B)[L]$="Id (Vg=-1.0V, Vd=-1.0V)";
Col(B)[U]$="A";
Col(B)[C]$="Ultrapure water";
int t0 = 0; // time constant to be added to time variable, just in case my experiment is a continuation of a previous one that needs to be taken into account in the elapsed time

doc -ef LB { // loop over all workbooks in folder
// double Ion = max(col(E));
sheetname$=wks.longname$; //get the name of worksheet
string time$=sheetname.GetToken(10,"_")$; // get the string No8, which shows the time in minutes
int t = %(time$); // convert string to integer
t = t0 + t; // add time constant to time

// range rap = [%H];
// range sd = [book1]1!col(d);
// range se = [book1]1!col(e);

// range r = %(rap)!Col(E); // origin range for Ion values

range r=[%H]!Col(E); // origin range for Ion values
range dest1=[Book1]1!wcol(1); // destination range for time values
range dest2=[Book1]1!wcol(2); // destination range for Ion values

// int nr = 294;
// dest1[1]=sd[nr];
dest1[wks.maxrows+1]=t; // Increase No of rows by 1.
dest2[wks.maxrows]=r[21]; // Rows have already increased, so there's no need to add 1.
// dest1[2]=se[nr];

// wrcopy iw:=%(rap)! r1:=31 r2:=31 c1:=5 c2:=5 ow:=[Ionvstime]! dc1:=2;  dr1:=$(i);
}