// This script is used on WG-OFETs and plots the Idon, Idoff, Igon, Igoff, plunger, and valve port vs time.
// Author: Dimitrios Simatos
// Version: 0.7
// Current status: Works well

[Main]
//uncomment following line to define functions using outside of this scope
//@global=1;
	del -al *;// Delete all the local and session variables

	

	doc -ef LB { // loop over all workbooks in folder
		page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
		page.active = 1; // Switch to the first worksheet.
		wks.colwidth = 8;// set all col width to 8
		
		string sheetname$=page.longname$; // Get the name of worksheet
		
		%P = sheetname.GetToken(2,"_")$; // Get the string that shows the material
		string polymer$=%P;
		polymer.Remove("-"); // Remove the dashes, as these will create a problem with the template names in the win -p command
		%P = polymer$;
		
		//string additive$=sheetname.GetToken(3,"_")$; // Get the string that shows the additive (with percentage)
		//%J = additive.GetToken(1,"p")$; // Get the string that shows the additive percentage
		//%B = additive.GetToken(2,"p")$; // Get the string that shows the additive
		%S = sheetname.GetToken(4,"_")$; // Get the string that shows the solvent content
		%T = sheetname.GetToken(5,"_")$; // Get the string that shows the additive thickness
		%U = sheetname.GetToken(6,"_")$; // Get the string that shows the additive thickness units
		%A = sheetname.GetToken(7,"_")$; // Get the string that shows the additive
		%K = sheetname.GetToken(9,"_")$; // Get the string that shows the step number in the cycling process
		%M = sheetname.GetToken(10,"_")$; // Get the string that shows the conditions (air/type of liquid)
		%O = sheetname.GetToken(11,"_")$; // Get the string that shows the conditions (air/type of liquid) (if necessary)
		%N = sheetname.GetToken(12,"_")$; // get the string, which shows the number of days

		switch (%M) // Case study
			{
				case "ultrapure": // If the string is "air", write "air in the comment field
					%W = "ultrapure water"; // Comment field (graph legend)
					break;
				
				case "town": // If the number is 1, use single form
					%W = "town water"; // Comment field (graph legend)
					break;
				
				default: // For all other numbers, use plural form
					%W = "air"; // Comment field (graph legend)
					break;
			}
		
		switch (%N) // Case study
			{
				case "initial": // If the string is "air", write "air in the comment field
					%N = "initial"; // Comment field (graph legend)
					break;
				
				case "1": // If the number is 1, use single form
					%N = "1 day"; // Comment field (graph legend)
					break;
				
				default: // For all other numbers, use plural form
					%N = "%N days"; // Comment field (graph legend)
					break;
			}

		%L = "%P + %T %U %A, %W, %N"; // Legend
		%V = sheetname.GetToken(13,"_")$; // get the string, which shows the type of workbook
		%R=%H; // Get the name of the previous window

		
		if(exist(%H,2)==0) continue; //not a workbook, must be a matrix
			else
				switch (%V) // Case study
					{
						case "Imax": // If the string is "Imax", process and plot the Imax, Imin, Ion, Ioff vs time data

							// Plot Imax, Imin, Ion, Ioff vs time
							col(A)[L]$ = "Time"; // Long name
							col(A)[U]$ = "Minutes"; // Units
							
							col(B)[L]$ = "Is max"; // Units
							col(B)[U]$ = "A"; // Units
							
							col(C)[L]$ = "Is min"; // Units
							col(D)[L]$ = "Id max"; // Units
							col(E)[L]$ = "Id min"; // Units
							col(F)[L]$ = "Ig max"; // Units
							col(G)[L]$ = "Ig min"; // Units
							col(H)[L]$ = "Is on"; // Units
							col(I)[L]$ = "Is off"; // Units
							col(J)[L]$ = "Id on"; // Units
							col(K)[L]$ = "Id off"; // Units
							col(L)[L]$ = "Ig on"; // Units
							col(M)[L]$ = "Ig off"; // Units
							
							col(C)[U]$ = col(B)[U]$;
							col(D)[U]$ = col(B)[U]$;
							col(E)[U]$ = col(B)[U]$;
							col(F)[U]$ = col(B)[U]$;
							col(G)[U]$ = col(B)[U]$;
							col(H)[U]$ = col(B)[U]$;
							col(I)[U]$ = col(B)[U]$;
							col(J)[U]$ = col(B)[U]$;
							col(K)[U]$ = col(B)[U]$;
							col(L)[U]$ = col(B)[U]$;
							col(M)[U]$ = col(B)[U]$;
								
							col(B)[C]$ = %L, %(col(B)[L]$); // Comment
							col(C)[C]$ = %L, %(col(C)[L]$); // Comment
							col(D)[C]$ = %L, %(col(D)[L]$); // Comment
							col(E)[C]$ = %L, %(col(E)[L]$); // Comment
							col(F)[C]$ = %L, %(col(F)[L]$); // Comment
							col(G)[C]$ = %L, %(col(G)[L]$); // Comment
							col(H)[C]$ = %L, %(col(H)[L]$); // Comment
							col(I)[C]$ = %L, %(col(I)[L]$); // Comment
							col(J)[C]$ = %L, %(col(J)[L]$); // Comment
							col(K)[C]$ = %L, %(col(K)[L]$); // Comment
							col(L)[C]$ = %L, %(col(L)[L]$); // Comment
							col(M)[C]$ = %L, %(col(M)[L]$); // Comment

							// Plot columns
							range r1 = [%R]1!wcol(10);  // data range of column
							range r2 = [%R]1!wcol(11);  // data range of column
							range r3 = [%R]1!wcol(12);  // data range of column
							range r4 = [%R]1!wcol(13);  // data range of column
								
							// Id, Ig graph
							win -t p TGBC_WGOFET_%P_10gl_Pristine_%S_%A_%T_%U_Idon_Idoff_Igon_Igoff_vs_time.otpu Ionoff;  // create a graph window using template (NOTE: The %P and %S values should not have dashes)
							//page.active = nActive;  // activate the layer for plot
							layer.include(r1);  // plot in the active layer
							layer.include(r2);  // plot in the active layer
							layer.include(r3);  // plot in the active layer
							layer.include(r4);  // plot in the active layer
								
							//layer -a;  // rescale the layer
							//layer -g; // Group the datasets in the layer to auto-color increment
							win -a Ionoff;  // activate the graph window
							page.longname$= "132nd_TGBC_%P_10gl_Pristine_%S_%A_%T_%U_%M_%O_%N_Ion_Ioff_vs_time_Vd=-1V"; //this renames the active window (long name)
							page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							win -r Ionoff I_%P_%A_%N; //this renames the active window (short name); //this renames the active window (short name)
							//layer -gu; // Ungroup the datasets in the layer
									
							//win -a %R;  // activate the previous window (workbook)
							
							// Ig graph
							win -t p TGBC_WGOFET_%P_10gl_Pristine_%S_%A_%T_%U_Igon_Igoff_vs_time.otpu Igonoff;  // create a graph window using template (NOTE: The %P and %S values should not have dashes)
							//page.active = nActive;  // activate the layer for plot
							layer.include(r3);  // plot in the active layer
							layer.include(r4);  // plot in the active layer
								
							//layer -a;  // rescale the layer
							//layer -g; // Group the datasets in the layer to auto-color increment
							win -a Igonoff;  // activate the graph window
							page.longname$= "132nd_TGBC_%P_10gl_Pristine_%S_%A_%T_%U_%M_%O_%N_Igon_Igoff_vs_time_Vd=-1V"; //this renames the active window (long name)
							page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							win -r Igonoff Ig_%P_%A_%N; //this renames the active window (short name); //this renames the active window (short name)
							//layer -gu; // Ungroup the datasets in the layer
									
							//win -a %R;  // activate the previous window (workbook)
							break;

						case "plunger": // If the string is "plunger", process and plot the plunger position vs time data
								
							// Plot Plunger position vs time								
							col(A)[L]$ = "Time"; // Long name
							col(A)[U]$ = "Minutes"; // Units
							
							col(B)[L]$ = "Absolute plunger position"; // Units
							col(B)[U]$ = "Steps"; // Units

							// Plot columns
							range r1 = [%R]1!wcol(2);  // data range of column
							
							// Plunger vs time graph
							win -t p Plunger_vs_time.otpu Plunger_vs_time;  // create a graph window using template
							//page.active = nActive;  // activate the layer for plot
							layer.include(r1);  // plot in the active layer
							
							layer -a;  // rescale the layer
							//layer -g; // Group the datasets in the layer to auto-color increment
							page.longname$= "132nd_TGBC_%P_10gl_Pristine_75pDCB_%A_%T_%U_%M_%O_%N_Plunger_vs_time"; //this renames the active window (long name)
							page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							win -r Plunger_vs_time %P_%A_Plunger; //this renames the active window (short name); //this renames the active window (short name)
							//layer -gu; // Ungroup the datasets in the layer
							
							
							// Plunger vs time (0-10 minutes) graph
							win -t p Plunger_vs_time_static_mode_0_10_min.otpu Plunger_vs_time_0_10;  // create a graph window using template
							//page.active = nActive;  // activate the layer for plot
							layer.include(r1);  // plot in the active layer
							
							//layer -a;  // rescale the layer
							//layer -g; // Group the datasets in the layer to auto-color increment
							page.longname$= "132nd_TGBC_%P_10gl_Pristine_75pDCB_%A_%T_%U_%M_%O_%N_Plunger_vs_time_0-10_min"; //this renames the active window (long name)
							page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							win -r Plunger_vs_time_0_10 %P_%A_Plunger_0_10; //this renames the active window (short name); //this renames the active window (short name)
							//layer -gu; // Ungroup the datasets in the layer
												
							//win -a %R;  // activate the previous window (workbook)
							break;
								
						case "valve": // If the string is "plunger", process and plot the plunger position vs time data
								
							// Plot Plunger position vs time								
							col(A)[L]$ = "Time"; // Long name
							col(A)[U]$ = "Minutes"; // Units
							
							col(B)[L]$ = "Valve port"; // Units
							col(B)[U]$ = "No"; // Units

							// Plot columns
							range r1 = [%R]1!wcol(2);  // data range of column
							
							// Valve port vs time graph
							win -t p Valve_port_vs_time.otpu Valve_port_vs_time;  // create a graph window using template
							//page.active = nActive;  // activate the layer for plot
							layer.include(r1);  // plot in the active layer
							
							layer -a;  // rescale the layer
							//layer -g; // Group the datasets in the layer to auto-color increment
							page.longname$= "132nd_TGBC_%P_10gl_Pristine_75pDCB_%A_%T_%U_%M_%O_%N_Valve_port_vs_time"; //this renames the active window (long name)
							page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							win -r Valve_port_vs_time %P_%A_Valve; //this renames the active window (short name); //this renames the active window (short name)
							//layer -gu; // Ungroup the datasets in the layer
							
							
							// Valve port vs time (0-10 minutes) graph
							win -t p Valve_port_vs_time_static_mode_0_10_min.otpu Valve_port_vs_time_0_10;  // create a graph window using template
							//page.active = nActive;  // activate the layer for plot
							layer.include(r1);  // plot in the active layer
							
							//layer -a;  // rescale the layer
							//layer -g; // Group the datasets in the layer to auto-color increment
							page.longname$= "132nd_TGBC_%P_10gl_Pristine_75pDCB_%A_%T_%U_%M_%O_%N_Valve_port_vs_time_0-10_min"; //this renames the active window (long name)
							page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							win -r Valve_port_vs_time_0_10 %P_%A_Valve_0_10; //this renames the active window (short name); //this renames the active window (short name)
							//layer -gu; // Ungroup the datasets in the layer
												
							//win -a %R;  // activate the previous window (workbook)
							break;
							
							//win -a %R;  // activate the previous window (workbook)
							break;
						
						default: // For all other cases, break
							break;
					}
	}
}