// This script is used on WG-OFETs and plots the transfer curves.
// Author: Dimitrios Simatos
// Version: 1.0
// Current status: Works well.
// Changes: Changed variable names.

[Main]
//uncomment following line to define functions using outside of this scope
//@global=1;

//-----------------------------------------------------------------------------------------------------------------------------------------------------------

	del -al *;// Delete all the local and session variables
	
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

		page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
		page.active = 1; // Switch to the first worksheet.
		
		string sheetname$=page.longname$; // Get the name of worksheet
		
		string batch$ = sheetname.GetToken(1,"_")$; // Get the string that shows the batch
		string architecture$ = sheetname.GetToken(2,"_")$; // Get the string that shows the architecture
		string material$ = sheetname.GetToken(3,"_")$; // Get the string that shows the material

		string concentration$ = sheetname.GetToken(4,"_")$; // Get the string that shows the concentration
		string concnumber$ = concentration.GetToken(1,"-")$; // Get the string that shows the concentration number
		string concunits$ = concentration.GetToken(2,"-")$; // Get the string that shows the concentration units

		string solvent$ = sheetname.GetToken(5,"_")$; // Get the string that shows the solvent content
		
		string additive$ = sheetname.GetToken(6,"_")$; // Get the string that shows the additive
		//string addthickness$ = additive.GetToken(2,"-")$; // Get the string that shows the additive thickness
		//string addthicknessunits$ = additive.GetToken(3,"-")$; // Get the string that shows the additive thickness units
		
		string stepNo$ = sheetname.GetToken(8,"_")$; // Get the string that shows the step number in the cycling process
		string condtype$ = sheetname.GetToken(9,"_")$; // Get the string that shows the conditions (air/type of liquid)
		string condinfo$ = sheetname.GetToken(10,"_")$; // Get the string that shows the conditions (air/type of liquid) (if necessary)
		string daysNo$ = sheetname.GetToken(11,"_")$; // get the string, which shows the number of days
		string minutesNo$ = sheetname.GetToken(12,"_")$; // get the string, which shows the number of minutes
		string workbooktype$=sheetname.GetToken(14,"_")$; // Get the string "T" or "O", which shows if the curve is a transfer or output curve
		string Vd$="-1";
		string VgStart$="0";
		string VgStop$="-1";
	
		string additivegraphlegend$; // This string will depend on "additive" and it will display the type of additive for the graph legend
		string condgraphlegend$; // This string will depend on "condtype" and it will display the type of liquid for the graph legend
		string daysgraphlegend$; // This string will depend on "daysNo" and it will display the type of liquid for the graph legend

		// Time constant addition
		//int t0 = 0; // time constant to be added to time variable, just in case my experiment is a continuation of a previous one that needs to be taken into account in the elapsed time
		//int t = %A; // Convert string to integer
		//t = t0 + t; // add time constant to time
		//%A=$(t); // Convert integer to string

	// create a graph window using template
	win -t p "%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_Transfer_Vd=%(Vd$)V_Vg=%(VgStart$)V to %(VgStop$)V.otpu" Transfer;

	// create a graph window using template
	win -t p "%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_Leakage_Vd=%(Vd$)V_Vg=%(VgStart$)V to %(VgStop$)V.otpu" Ig;

	// create a graph window using template
	win -t p "%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_Transfer_Vd=%(Vd$)V_Vg=%(VgStart$)V to %(VgStop$)V_10-200_min.otpu" Transfer10200;

	// create a graph window using template
	win -t p "%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_Leakage_Vd=%(Vd$)V_Vg=%(VgStart$)V to %(VgStop$)V_10-200_min.otpu" Ig10200;

	// create a graph window using template
	win -t p "%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_Transfer_Vd=%(Vd$)V_Vg=%(VgStart$)V to %(VgStop$)V_200-750_min.otpu" Transfer200750;

	// create a graph window using template
	win -t p "%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_Leakage_Vd=%(Vd$)V_Vg=%(VgStart$)V to %(VgStop$)V_200-750_min.otpu" Ig200750;
	
	// create a graph window using template
	win -t p "%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_Transfer_Leakage_Vd=%(Vd$)V_Vg=%(VgStart$)V to %(VgStop$)V_100-600_min.otpu" TransferIg100600;
	
	// create a graph window using template	
	win -t p "%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_Transfer_Leakage_Vd=%(Vd$)V_Vg=%(VgStart$)V to %(VgStop$)V_single.otpu" TransferIg100;

	// create a graph window using template
	win -t p "%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_Transfer_Leakage_Vd=%(Vd$)V_Vg=%(VgStart$)V to %(VgStop$)V_single.otpu" TransferIg400;

	
	doc -ef LB { // loop over all workbooks in folder
		page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
		page.active = 1; // Switch to the first worksheet.
		wks.colwidth = 8;// set all col width to 8
		
		string sheetname$=page.longname$; // Get the name of worksheet
		string minutesNo$ = sheetname.GetToken(12,"_")$; // get the string, which shows the number of minutes


		switch (%(additive$)) // Case study
			{
				case "TCNQ": // If the number is 1, use single form
					additivegraphlegend$ = "TCNQ"; // Comment field (graph legend)
					break;
				
				case "F2TCNQ": // If the number is 1, use single form
					//string pH$ = condinfo.GetToken(1,"-")$; // get the string, which shows the pH
					additivegraphlegend$ = "F2TCNQ"; // Comment field (graph legend)
					break;
				
				default: // For all other numbers, use plural form
					additivegraphlegend$ = "Pristine"; // Comment field (graph legend)
					break;
			}
		
		switch (%(condtype$)) // Case study
			{
				case "ultrapure": // If the string is "ultrapure", write "ultrapure water" in the comment field
					condgraphlegend$ = "Ultrapure water"; // Comment field (graph legend)
					break;
				
				case "town": // If the string is "town", write "town water" in the comment field
					condgraphlegend$ = "Town water"; // Comment field (graph legend)
					break;
				
				case "pbuffer": // If the string is "phosphatebuffer", write "Phosphate buffer (pH="pHValue", "buffer concentration" "buffer concentration units")" in the comment field
					string pH$ = condinfo.GetToken(2,"-")$; // get the string, which shows the pH
					pH$ = pH.Substitute(".", ",", 0)$; // Substitute comma with dot
					string bufferconcentration$ = condinfo.GetToken(3,"-")$; // get the string, which shows the buffer concentration
					string bufferconcunits$ = condinfo.GetToken(4,"-")$; // get the string, which shows the buffer concentration
					condgraphlegend$ = "Phosphate buffer (pH= %(pH$), %(bufferconcentration$) %(bufferconcunits$)"; // Comment field (graph legend)
					break;
				
				case "N2": // If the string is "N2", write "N2" in the comment field
					condgraphlegend$ = "N2"; // Comment field (graph legend)
					break;
				
				default: // For all other strings, write "air" in the comment field
					condgraphlegend$ = "Air"; // Comment field (graph legend)
					break;
			}
		
		switch (%(daysNo$)) // Case study
			{
				case "initial": // If the string is "air", write "air in the comment field
					%(daysNo$) = "initial"; // Comment field (graph legend)
					break;
				
				case "1": // If the number is 1, use single form
					%(daysNo$) = "1 day"; // Comment field (graph legend)
					break;
				
				default: // For all other numbers, use plural form
					%(daysNo$) = "%(daysNo$) days"; // Comment field (graph legend)
					break;
			}
		
		string previousworkbook$=%H; // Get the name of the previous window

		if(exist(%H,2)==0) continue; //not a workbook, must be a matrix
			else
				if(%(minutesNo$)==20 || %(minutesNo$)==30 || %(minutesNo$)==40 || %(minutesNo$)==50
					|| %(minutesNo$)==60 || %(minutesNo$)==101 || %(minutesNo$)==120 || %(minutesNo$)==140 || %(minutesNo$)==160
					 || %(minutesNo$)==181 || %(minutesNo$)==200 || %(minutesNo$)==250 || %(minutesNo$)==300 || %(minutesNo$)==400 || %(minutesNo$)==500
					  || %(minutesNo$)==601 || %(minutesNo$)==700 || %(minutesNo$)==751)
					{
							// Set range variables
							range r1 = [%H]1!wcol(5);  // data range of abs(Id) column
							range r2 = [%H]1!wcol(6);  // data range of abs(Ig) column

							// Id graph (Transfer curves)
							//page.active = nActive;  // activate the layer for plot
							win -a Transfer;  // activate the graph window
							layer.include(r1);  // plot in the active layer
								
							//layer -a;  // rescale the layer
							////layer -g; // Group the datasets in the layer to auto-color increment
							//page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Vd=%(Vd$)V"; //this renames the active window (long name)
							//page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							//win -r Transfer T_%(material$)_%(additive$)_%(stepNo)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
							////layer -gu; // Ungroup the datasets in the layer
							
							////win -a %(previousworkbook$);  // activate the previous window (workbook)
							
							// Ig graph
							//page.active = nActive;  // activate the layer for plot
							win -a Ig;  // activate the graph window
							layer.include(r2);  // plot in the active layer
								
							//layer -a;  // rescale the layer
							////layer -g; // Group the datasets in the layer to auto-color increment
							//win -a Ig;  // activate the graph window
							//page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Leakage_Vd=%(Vd$)V"; //this renames the active window (long name)
							//page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							//win -r Ig Ig_%(material$)_%(additive$)_%(stepNo)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
							////layer -gu; // Ungroup the datasets in the layer
							
							//win -a %(previousworkbook$);  // activate the previous window (workbook)
					
					
					// Plot the "10-200 minutes" graphs
					if(%(minutesNo$)==20 || %(minutesNo$)==30 || %(minutesNo$)==40 || %(minutesNo$)==50
					|| %(minutesNo$)==60 || %(minutesNo$)==101 || %(minutesNo$)==120 || %(minutesNo$)==140 || %(minutesNo$)==160
					 || %(minutesNo$)==181 || %(minutesNo$)==200)
						{
							// Id graph (Transfer curves)
							//page.active = nActive;  // activate the layer for plot
							win -a Transfer10200;  // activate the graph window
							layer.include(r1);  // plot in the active layer
								
							//layer -a;  // rescale the layer
							////layer -g; // Group the datasets in the layer to auto-color increment
							//page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Vd=%(Vd$)V"; //this renames the active window (long name)
							//page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							//win -r Transfer T_%(material$)_%(additive$)_%(stepNo)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
							////layer -gu; // Ungroup the datasets in the layer
							
							////win -a %(previousworkbook$);  // activate the previous window (workbook)
							
							// Ig graph
							//page.active = nActive;  // activate the layer for plot
							win -a Ig10200;  // activate the graph window
							layer.include(r2);  // plot in the active layer
								
							//layer -a;  // rescale the layer
							////layer -g; // Group the datasets in the layer to auto-color increment
							//win -a Ig;  // activate the graph window
							//page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Leakage_Vd=%(Vd$)V"; //this renames the active window (long name)
							//page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							//win -r Ig Ig_%(material$)_%(additive$)_%(stepNo)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
							////layer -gu; // Ungroup the datasets in the layer
							
							//win -a %(previousworkbook$);  // activate the previous window (workbook)
						};		
						
					// Plot the "200-750 minutes" graphs
					if(%(minutesNo$)==200 || %(minutesNo$)==250 || %(minutesNo$)==300 || %(minutesNo$)==400 || %(minutesNo$)==500
					|| %(minutesNo$)==601 || %(minutesNo$)==700 || %(minutesNo$)==751)
						{
							// Id graph (Transfer curves)
							//page.active = nActive;  // activate the layer for plot
							win -a Transfer200750;  // activate the graph window
							layer.include(r1);  // plot in the active layer
								
							//layer -a;  // rescale the layer
							////layer -g; // Group the datasets in the layer to auto-color increment
							//page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Vd=%(Vd$)V"; //this renames the active window (long name)
							//page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							//win -r Transfer T_%(material$)_%(additive$)_%(stepNo)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
							////layer -gu; // Ungroup the datasets in the layer
							
							////win -a %(previousworkbook$);  // activate the previous window (workbook)
							
							// Ig graph
							//page.active = nActive;  // activate the layer for plot
							win -a Ig200750;  // activate the graph window
							layer.include(r2);  // plot in the active layer
								
							//layer -a;  // rescale the layer
							////layer -g; // Group the datasets in the layer to auto-color increment
							//win -a Ig;  // activate the graph window
							//page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Leakage_Vd=%(Vd$)V"; //this renames the active window (long name)
							//page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							//win -r Ig Ig_%(material$)_%(additive$)_%(stepNo)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
							////layer -gu; // Ungroup the datasets in the layer
							
							//win -a %(previousworkbook$);  // activate the previous window (workbook)
						};
					
					// Plot the "100-600 minutes" graph
					if(%(minutesNo$)==101 || %(minutesNo$)==200 || %(minutesNo$)==300 || %(minutesNo$)==400 || %(minutesNo$)==500
					|| %(minutesNo$)==601)
						{
							// Id graph (Transfer curves)
							//page.active = nActive;  // activate the layer for plot
							win -a TransferIg100600;  // activate the graph window
							layer.include(r1);  // plot in the active layer
							layer.include(r2);  // plot in the active layer

							//layer -a;  // rescale the layer
							////layer -g; // Group the datasets in the layer to auto-color increment
							//page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Vd=%(Vd$)V"; //this renames the active window (long name)
							//page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							//win -r Transfer T_%(material$)_%(additive$)_%(stepNo)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
							////layer -gu; // Ungroup the datasets in the layer
							
							////win -a %(previousworkbook$);  // activate the previous window (workbook)
						};
					
					// Plot the "100th minute" graph
					if(%(minutesNo$)==101)
						{
							// Id graph (Transfer curves)
							//page.active = nActive;  // activate the layer for plot
							win -a TransferIg100;  // activate the graph window
							layer.include(r1);  // plot in the active layer
							layer.include(r2);  // plot in the active layer

							//layer -a;  // rescale the layer
							////layer -g; // Group the datasets in the layer to auto-color increment
							//page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Vd=%(Vd$)V"; //this renames the active window (long name)
							//page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							//win -r Transfer T_%(material$)_%(additive$)_%(stepNo)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
							////layer -gu; // Ungroup the datasets in the layer
							
							////win -a %(previousworkbook$);  // activate the previous window (workbook)
						};
						
					// Plot the "400th minute" graph
					if(%(minutesNo$)==400)
						{
							// Id graph (Transfer curves)
							//page.active = nActive;  // activate the layer for plot
							win -a TransferIg400;  // activate the graph window
							layer.include(r1);  // plot in the active layer
							layer.include(r2);  // plot in the active layer

							//layer -a;  // rescale the layer
							////layer -g; // Group the datasets in the layer to auto-color increment
							//page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Vd=%(Vd$)V"; //this renames the active window (long name)
							//page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
							//win -r Transfer T_%(material$)_%(additive$)_%(stepNo)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
							////layer -gu; // Ungroup the datasets in the layer
							
							////win -a %(previousworkbook$);  // activate the previous window (workbook)
						};
					};
					else continue;
	}
	
	// Rename the graphs
	
	win -a Transfer;  // activate the graph window
		
	//layer -a;  // rescale the layer
	layer -g; // Group the datasets in the layer to auto-color increment
	page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Vd=%(Vd$)V"; //this renames the active window (long name)
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	win -r Transfer T_%(material$)_%(additive$)_%(stepNo)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
	layer -gu; // Ungroup the datasets in the layer
	legend; // Update the legend

	
	win -a Ig;  // activate the graph window
		
	//layer -a;  // rescale the layer
	layer -g; // Group the datasets in the layer to auto-color increment
	win -a Ig;  // activate the graph window
	page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Leakage_Vd=%(Vd$)V"; //this renames the active window (long name)
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	win -r Ig Ig_%(material$)_%(additive$)_%(stepNo$)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
	layer -gu; // Ungroup the datasets in the layer
	legend; // Update the legend
	
	win -a Transfer10200;  // activate the graph window
		
	//layer -a;  // rescale the layer
	layer -g; // Group the datasets in the layer to auto-color increment
	page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Vd=%(Vd$)V_10-200_min"; //this renames the active window (long name)
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	win -r Transfer10200 T10200_%(material$)_%(additive$)_%(stepNo$)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
	layer -gu; // Ungroup the datasets in the layer
	legend; // Update the legend

	
	win -a Ig10200;  // activate the graph window
		
	//layer -a;  // rescale the layer
	layer -g; // Group the datasets in the layer to auto-color increment
	win -a Ig10200;  // activate the graph window
	page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Leakage_Vd=%(Vd$)V_10-200_min"; //this renames the active window (long name)
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	win -r Ig10200 Ig10200_%(material$)_%(additive$)_%(stepNo$)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
	layer -gu; // Ungroup the datasets in the layer
	legend; // Update the legend
	
	win -a Transfer200750;  // activate the graph window
		
	//layer -a;  // rescale the layer
	layer -g; // Group the datasets in the layer to auto-color increment
	page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Vd=%(Vd$)V_200-750_min"; //this renames the active window (long name)
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	win -r Transfer200750 T200750_%(material$)_%(additive$)_%(stepNo$)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
	layer -gu; // Ungroup the datasets in the layer
	legend; // Update the legend

	
	win -a Ig200750;  // activate the graph window
		
	//layer -a;  // rescale the layer
	layer -g; // Group the datasets in the layer to auto-color increment
	win -a Ig200750;  // activate the graph window
	page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Leakage_Vd=%(Vd$)V_200-750_min"; //this renames the active window (long name)
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	win -r Ig200750 Ig200750_%(material$)_%(additive$)_%(stepNo$)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
	layer -gu; // Ungroup the datasets in the layer
	legend; // Update the legend

	
	win -a TransferIg100600;  // activate the graph window
		
	//layer -a;  // rescale the layer
	//layer -g; // Group the datasets in the layer to auto-color increment
	page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Leakage_Vd=%(Vd$)V_100-600_min"; //this renames the active window (long name)
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	win -r TransferIg100600 T100600_%(material$)_%(additive$)_%(stepNo$)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
	//layer -gu; // Ungroup the datasets in the layer
	//legend; // Update the legend
	
	win -a TransferIg100;  // activate the graph window
		
	//layer -a;  // rescale the layer
	//layer -g; // Group the datasets in the layer to auto-color increment
	page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Leakage_Vd=%(Vd$)V_100_min"; //this renames the active window (long name)
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	win -r TransferIg100 T100_%(material$)_%(additive$)_%(stepNo$)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
	//layer -gu; // Ungroup the datasets in the layer
	//legend; // Update the legend
	
	win -a TransferIg400;  // activate the graph window
		
	//layer -a;  // rescale the layer
	//layer -g; // Group the datasets in the layer to auto-color increment
	page.longname$= "%(batch$)_%(architecture$)_%(material$)_%(concentration$)_%(solvent$)_%(additive$)_step_%(stepNo$)_%(condtype$)_%(condinfo$)_%(daysNo$)_Transfer_Leakage_Vd=%(Vd$)V_400_min"; //this renames the active window (long name)
	page.title = 1;  // Let the workbook title shows Long Name only (1 = Long Name, 2 = short name, 3 = both)
	win -r TransferIg400 T400_%(material$)_%(additive$)_%(stepNo)_%(daysNo$)_%(minutesNo$); //this renames the active window (short name); //this renames the active window (short name)
	//layer -gu; // Ungroup the datasets in the layer
	//legend; // Update the legend
}